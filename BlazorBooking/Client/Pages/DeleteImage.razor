@page "/deleteImage"
@using BlazorBooking.Client.Services.Image;
@using BlazorBooking.Shared.Models.Image;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;

@inject NavigationManager NavigationManager
@inject IImageService IImageService

<PageTitle>Delete Image</PageTitle>

<h3>Delete Image</h3>

<table class="table table-striped table-bordered bg-light">
    <thead>
        <tr>
            <th>Id</th>
            <th>Podgląd Zdjęcia</th>
            <th>Delete</th>

        </tr>
    </thead>
    <tbody>
        @if (imagesList == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
                @foreach (var imageElement in imagesList)
                {
                    <tr>
                        <td>@imageElement.Id</td>
                        <td><img src="@($"data:image/png;base64,{Convert.ToBase64String(@imageElement.PhotoResource)}")" alt="Zdjęcie" width="300" height="200" /></td>
                        <td>
                            <button type="button" class="btn btn-danger" @onclick="@(() => @DeleteImg(@imageElement.Id) )">Delete</button>

                            <button type="button" class="btn btn-secondary" @onclick="@Cancel">Cancel</button>
                        </td>
                    </tr>
                }
        }
    </tbody>
</table>

@code {
    public List<ImageDto> imagesList = new List<ImageDto>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await GetImages();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
    private async Task GetImages()
    {
        imagesList = (await IImageService.GetImages()).Images.ToList();
    }
    private async Task DeleteImg(int id)
    {
        await IImageService.DeleteImage(id);
        NavigationManager.NavigateTo("/images");
    }
    private void Cancel()
    {
        NavigationManager.NavigateTo("/images");
    }
}
