@page "/myreservations"
@using BlazorBooking.Client.Services.Reservation;
@using BlazorBooking.Shared.Models.Reservation;
@using Microsoft.AspNetCore.Authorization;
@inject NavigationManager NavigationManager
@inject IReservationService IReserService
@inject AuthenticationStateProvider authenticationStateProvider
@attribute [Authorize]

<PageTitle>My Reservations</PageTitle>

<h1>My Reservations</h1>

<table class="table table-striped table-bordered bg-light">
    <thead>
        <tr>
            <th>Id</th>
            <th>StartDate</th>
            <th>EndDate</th>
            <th>IdRoom</th>
        </tr>
    </thead>
    <tbody>
        @if (ReservatiuonResponse.Reservations == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            @foreach (var reservationElement in MyreservationsList)
                {
                    <tr>
                        <td>@reservationElement.Id</td>
                        <td>@reservationElement.StartDate</td>
                        <td>@reservationElement.EndDate</td>
                        <td>@reservationElement.RoomId</td>
                    </tr>
                }
            
        }
    </tbody>
</table>

@code {
    public ReservationsVm ReservatiuonResponse = new ReservationsVm();
    public List<ReservationsVm> reservationsList = new List<ReservationsVm>();
    public List<ReservationDto> MyreservationsList = new List<ReservationDto>();
    protected override async Task OnInitializedAsync()
    {
        await GetReservations();
    }
    private async Task GetReservations()
    {
        var authenticationState = await authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;
        if (user != null)
        {
        ReservatiuonResponse = await IReserService.GetReservations();
        reservationsList.Add(ReservatiuonResponse);
        MyreservationsList = reservationsList[0].Reservations.Where(x => x.UserName == user.Identity.Name).ToList();
        }
    }
}
