@page "/searchrooms"
@using BlazorBooking.Client.Services.Room;
@using BlazorBooking.Shared.Models.Room;
@inject NavigationManager NavigationManager
@inject IRoomService IRoomService

<PageTitle>Search Rooms</PageTitle>
<h3>Search Room</h3>


<div class="mb-3">
    <label for="name" class="form-label">Enter the city:</label>
    <select @bind="miasto">
        @foreach (var element in City)
        {
            <option>@element</option>
        }
    </select>
    <div><button type="button" class="btn btn-info" @onclick="@GetRooms">Search</button></div>
</div>

@if (miasto != string.Empty)
{

<table class="table table-striped table-bordered bg-light">
    <thead>
        <tr>
            <th>Name</th>
            <th>Capacity</th>
            <th>Price per night</th>
            <th>Country</th>
            <th>City</th>
            <th>Building Number</th>
            <th>IdHotel</th>
            <th>Photo</th>
            <th>See availability</th>
        </tr>
    </thead>
    <tbody>

            @foreach (var roomElement in roomAndPhotos)
            {
                <tr>
                    <td>@roomElement.Name</td>
                    <td>@roomElement.Capacity</td>
                    <td>@roomElement.PricePerNight</td>
                    <td>@roomElement.Country</td>
                    <td>@roomElement.City</td>
                    <td>@roomElement.BuildingNumber</td>
                    <td>@roomElement.HotelId</td>
                    <td><img src=" @($"data:image /png;base64,{Convert.ToBase64String(@roomElement.PhotoResource)}")" alt="Zdjęcie" width="300" height="200" /></td>
                    <td><a class="btn btn-primary" href="/createReservation/@roomElement.Id">Check</a></td>
                </tr>
            }
    </tbody>
</table>
}
@code {
    public List<RoomDto> Rooms = new List<RoomDto>();
    public List<RoomDto> Pokoje = new List<RoomDto>();
    public string miasto = string.Empty;
    public List<string> City = new List<string>();
    public RoomAndImageDto RoomandImage;
    public List<RoomAndImageDto> roomAndPhotos = new List<RoomAndImageDto>();

    protected override async Task OnInitializedAsync()
    {
        await GetRooms();
    }
    private async Task GetRooms()
    {
        City.Clear();
        roomAndPhotos.Clear();
        Rooms = (await IRoomService.GetRooms()).Rooms.ToList();
        Pokoje = (await IRoomService.GetRooms()).Rooms.Where(x => x.City == miasto).ToList();
        AddCityToList();
        await AddPhotos();
    }
    public void AddCityToList()
    {
        City.Add(miasto);
        foreach (var element in Rooms)
        {
            if (!City.Contains(element.City))
            {
                City.Add(element.City);
            }
        }
    }
    public async Task AddPhotos()
    {
        foreach (var element in Pokoje)
        {
            RoomandImage = new RoomAndImageDto
                {
                    Id = element.Id,
                    ImageId = element.ImageId,
                    Name = element.Name,
                    Capacity = element.Capacity,
                    IsBooked = element.IsBooked,
                    PricePerNight = element.PricePerNight,
                    Street = element.Street,
                    BuildingNumber = element.BuildingNumber,
                    RoomNumber = element.RoomNumber,
                    PostalCode = element.PostalCode,
                    City = element.City,
                    Country = element.Country,
                    HotelId = element.HotelId,
                    PhotoResource = await IRoomService.GetResourseImage(element.ImageId ?? 1)
            };
            roomAndPhotos.Add(RoomandImage);
        }
    }
    private void Cancel()
    {
        NavigationManager.NavigateTo("/searchrooms");
    }
}
