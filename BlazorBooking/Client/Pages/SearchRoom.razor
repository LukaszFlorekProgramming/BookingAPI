@page "/searchrooms"
@using BlazorBooking.Client.Services.Hotel;
@using BlazorBooking.Client.Services.Room;
@using BlazorBooking.Shared.Models.Room;

@inject NavigationManager NavigationManager
@inject IRoomService IRoomService
@inject IHotelService IHotelServ

<PageTitle>Search Rooms</PageTitle>
<h3>Search Apartament</h3>

<div class="mb-3">
    <label for="name" class="form-label">Enter the city:</label>
    <select @bind="miasto">
        <option value="">select city</option>
        @foreach (var element in Cities)
        {
            <option>@element</option>
        }
    </select>
</div>

<div class="mb-3">
    <label for="name" class="form-label">Enter the hotel:</label>
    <select @bind="hotel">
        @foreach (var element in Hotels)
        {
            <option>@element</option>
        }
    </select>
    <div><button type="button" class="btn btn-info" @onclick="@Search">Search</button></div>
</div>

@if (miasto != string.Empty)
{
    <table class="table table-striped table-bordered bg-light">
        <thead>
            <tr class="bg-primary" style="color:aliceblue">
                <th>Name</th>
                <th>Capacity</th>
                <th>Price per night</th>
                <th>Country</th>
                <th>City</th>
                <th>Building Number</th>
                <th>Hotel Name</th>
                <th>Photo</th>
                <th>See availability</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var roomElement in roomAndPhotosList)
            {
                <tr>
                    <td>@roomElement.Name</td>
                    <td>@roomElement.Capacity</td>
                    <td>@roomElement.PricePerNight</td>
                    <td>@roomElement.Country</td>
                    <td>@roomElement.City</td>
                    <td>@roomElement.BuildingNumber</td>
                    <td>@roomElement.NameHotel</td>
                    <td><img src=" @($"data:image /png;base64,{Convert.ToBase64String(@roomElement.PhotoResource)}")" alt="Zdjęcie" width="300" height="200" /></td>
                    <td><a class="btn btn-primary" href="/createReservation/@roomElement.Id">Check</a></td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    public List<RoomAndImageDto> roomAndPhotosList = new List<RoomAndImageDto>();
    public string miasto = string.Empty;
    public string hotel = string.Empty;
    public string hotelchange = string.Empty;
    public List<string> Cities = new List<string>();
    public List<string> Hotels = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        await GetRooms();
        await Search();
    }

    private async Task Search()
    {
        hotelchange = hotel;
        hotel = string.Empty;
        Hotels.Clear();
        roomAndPhotosList.Clear();
        if (hotelchange != string.Empty)
        {
            roomAndPhotosList = (await IRoomService.GetRoomWithPhoto()).RoomsAndImages.Where(x => x.City == miasto && x.NameHotel == hotelchange).ToList();
        }
        else
        {
            roomAndPhotosList = (await IRoomService.GetRoomWithPhoto()).RoomsAndImages.Where(x => x.City == miasto).ToList();
        }
        AddHotelToList();
    }

    private async Task GetRooms()
    {
        roomAndPhotosList = (await IRoomService.GetRoomWithPhoto()).RoomsAndImages.ToList();
        AddCityToList();
    }

    public void AddCityToList()
    {
        foreach (var element in roomAndPhotosList)
        {
            if (!Cities.Contains(element.City))
            {
                Cities.Add(element.City);
            }
        }
    }

    public void AddHotelToList()
    {
        foreach (var element in roomAndPhotosList)
        {
            if (!Hotels.Contains(element.NameHotel))
            {
                Hotels.Add(element.NameHotel);
            }
        }
    }
}
