// <auto-generated />
using System;
using Booking.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booking.Persistance.Migrations
{
    [DbContext(typeof(ReservationDbContext))]
    [Migration("20230403192651_seed2")]
    partial class seed2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Booking.Persistance.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Inactivated")
                        .HasColumnType("datetime2");

                    b.Property<string>("InactivatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(939),
                            CreatedBy = "",
                            EndDate = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(938),
                            Inactivated = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(945),
                            InactivatedBy = "",
                            Modified = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(941),
                            ModifiedBy = "",
                            StartDate = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(903),
                            StatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(950),
                            CreatedBy = "",
                            EndDate = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(949),
                            Inactivated = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(953),
                            InactivatedBy = "",
                            Modified = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(952),
                            ModifiedBy = "",
                            StartDate = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(948),
                            StatusId = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(958),
                            CreatedBy = "",
                            EndDate = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(956),
                            Inactivated = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(960),
                            InactivatedBy = "",
                            Modified = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(959),
                            ModifiedBy = "",
                            StartDate = new DateTime(2023, 4, 3, 21, 26, 51, 108, DateTimeKind.Local).AddTicks(955),
                            StatusId = 1
                        });
                });

            modelBuilder.Entity("Booking.Persistance.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 10,
                            IsBooked = false,
                            Name = "Room1"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 10,
                            IsBooked = false,
                            Name = "Room2"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 10,
                            IsBooked = false,
                            Name = "Room3"
                        });
                });

            modelBuilder.Entity("Booking.Persistance.Entities.Reservation", b =>
                {
                    b.HasOne("Booking.Persistance.Entities.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Booking.Persistance.Entities.Room", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
