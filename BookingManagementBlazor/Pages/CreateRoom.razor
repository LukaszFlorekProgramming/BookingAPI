@page "/addroom"
@using BookingManagementBlazor.Models.Image;
@using BookingManagementBlazor.Models.Room;
@using BookingManagementBlazor.Services.Image;
@using BookingManagementBlazor.Services.Room;
@inject NavigationManager NavigationManager
@inject IRoomService IRoomService
@inject IImageService IImageService

<PageTitle>New Room</PageTitle>

<h3>New Room</h3>

<div class="row">
    <div class="col-sm-4">
        <EditForm Model="@roomDto" OnSubmit="AddRoom">
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" @bind-Value="roomDto.Name" class="form-control"></InputText>
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">Capacity:</label>
                <InputNumber id="name" @bind-Value="roomDto.Capacity" class="form-control"></InputNumber>
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">Is booked:</label>
                <InputRadioGroup @bind-Value="@roomDto.IsBooked">
                    <InputRadio Value="true" /> Tak
                    <InputRadio Value="false" /> Nie
                </InputRadioGroup>
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">PricePerNight:</label>
                <InputNumber id="name" @bind-Value="roomDto.PricePerNight" class="form-control"></InputNumber>
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">Street:</label>
                <InputText id="name" @bind-Value="roomDto.Street" class="form-control"></InputText>
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">BuildingNumber:</label>
                <InputNumber id="name" @bind-Value="roomDto.BuildingNumber" class="form-control"></InputNumber>
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">RoomNumber:</label>
                <InputNumber id="name" @bind-Value="roomDto.RoomNumber" class="form-control"></InputNumber>
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">PostalCode:</label>
                <InputText id="name" @bind-Value="roomDto.PostalCode" class="form-control"></InputText>
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">City:</label>
                <InputText id="name" @bind-Value="roomDto.City" class="form-control"></InputText>
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">Country:</label>
                <InputText id="name" @bind-Value="roomDto.Country" class="form-control"></InputText>
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">IdImage: (wybierz naciskając na zdjęcie)</label>
                <InputNumber id="name" @bind-Value="roomDto.ImageId" class="form-control"></InputNumber>
            </div>
            

            <table class="table table-striped table-bordered bg-light">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Podgląd Zdjęcia</th>

                    </tr>
                </thead>
                <tbody>

                    @if (ImagesWhere == null)
                    {
                        <p><em>Loading...</em></p>
                    }
                    else
                    {

                        @foreach (var imageElement in ImagesWhere)
                            {
                                
                                <tr>
                                    <td>@imageElement.Id</td>
                                <td @onclick="() => IdImageSet(imageElement.Id)"><img src=" @($"data:image /png;base64,{Convert.ToBase64String(@imageElement.PhotoResource)}")" alt="Zdjęcie" width="300" height="200" /></td>
                                </tr>
                            }
                        
                    }
                </tbody>
            </table>
            




            <button type="submit" class="btn btn-primary">Save</button>
            <button type="button" class="btn btn-secondary" @onclick="@Cancel">Cancel</button>
        </EditForm>
    </div>
</div>

@code {
    public ImageVm ImageResponse = new ImageVm();
    public List<ImageVm> imagesList = new List<ImageVm>();
    public List<ImageDto> Images = new List<ImageDto>();
    public List<ImageDto> ImagesWhere = new List<ImageDto>();
    public List<byte[]> ImagesResourse = new List<byte[]>();
    //public byte[] imageByte = new byte[] { 10 };

    private RoomDto roomDto = new()
        {
            Name = string.Empty,
            Capacity = 0,
            IsBooked = false,
            PricePerNight = 0,
            Street = string.Empty,
            BuildingNumber = 0,
            RoomNumber = 0,
            PostalCode = string.Empty,
            City = string.Empty,
            Country = string.Empty,
            ImageId = 0
        };

    protected override async Task OnInitializedAsync()
    {
        await AddRoom();
    }

    private async Task AddRoom()
    {
        if (roomDto.Name != string.Empty)
        {
            ImagesWhere.Clear();
            roomDto = await IRoomService.CreateRoom(roomDto);


            NavigationManager.NavigateTo("/rooms");
        }
        ImageResponse = await IImageService.GetImages();
        Images= ImageResponse.Images.ToList();
        ImagesWhere = Images.Where(image => image.PhotoResource != null).ToList();
    }
    private void Cancel()
    {
        NavigationManager.NavigateTo("/rooms");
    }
    private void IdImageSet(int id)
    {
        roomDto.ImageId = id;
    }
}