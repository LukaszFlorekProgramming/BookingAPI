@page "/deleteImage"
@using BookingManagementBlazor.Models.Image;
@using BookingManagementBlazor.Services.Image;
@inject NavigationManager NavigationManager
@inject IImageService IImageService

<PageTitle>Delete Image</PageTitle>

<h3>Delete Image</h3>

@*<div class="row">
    <div class="col-sm-4">
        <EditForm Model="@imageDto" OnSubmit="Delete">
            
            <div class="mb-3">
                <label for="name" class="form-label">Capacity:</label>
                <InputNumber id="name" @bind-Value="imageDto.Id" class="form-control"></InputNumber>
            </div>
            





            <button type="submit" class="btn btn-primary">Save</button>
            <button type="button" class="btn btn-secondary" @onclick="@Cancel">Cancel</button>
        </EditForm>
    </div>
</div>*@

<table class="table table-striped table-bordered bg-light">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            

        </tr>
    </thead>
    <tbody>

           <tr>
            <th>
                <div class="mb-3">
                    <InputNumber id="name" @bind-Value="idImage" onchange="Delete" class="form-control"></InputNumber>
                </div>
            </th>
            <th>
               @*<button type="submit" class="btn btn-primary" @onclick="@Delete(idImage)" >Save</button>*@
                <button type="button" class="btn btn-secondary" @onclick="@Cancel">Cancel</button>
            </th>     
           </tr>
               
        
    </tbody>
</table>

@code {
    public int idImage = 0;

    protected override async Task OnInitializedAsync()
    {
        await Delete(idImage);
    }

    private async Task<int> Delete(int id)
    {
        idImage = 8;
        if (idImage != 0)
        {
             await IImageService.DeleteImage(idImage);
        }
        Console.WriteLine("Coś nie tak");
        return id;
    }


    private void Cancel()
    {
        NavigationManager.NavigateTo("/images");
    }
}
