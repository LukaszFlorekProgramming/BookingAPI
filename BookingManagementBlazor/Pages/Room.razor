@page "/addroom"
@using BookingManagementBlazor.Models.Room;
@using BookingManagementBlazor.Services.Room;
@inject NavigationManager NavigationManager
@inject IRoomService IRoomService

<PageTitle>New Room</PageTitle>

<h3>New Room</h3>

<div class="row">
    <div class="col-sm-4">
        <EditForm Model="@roomDto" OnSubmit="AddRoom">
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" @bind-Value="roomDto.Name" class="form-control"></InputText>
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">Capacity:</label>
                <InputNumber id="name" @bind-Value="roomDto.Capacity" class="form-control"></InputNumber>
            </div>
            <div class="mb-3">
                <InputRadioGroup @bind-Value="@roomDto.IsBooked">
                    <InputRadio Value="true" /> Tak
                    <InputRadio Value="false" /> Nie
                </InputRadioGroup>
            </div>
            <button type="submit" class="btn btn-primary">Save</button>
            <button type="button" class="btn btn-secondary" @onclick="@Cancel" >Cancel</button>
        </EditForm>
    </div>
</div>

@code {
    private RoomDto roomDto = new()
    {
            Name = string.Empty,
            Capacity = 0,
            IsBooked = false
    };

    protected override async Task OnInitializedAsync()
    {
        await AddRoom();
    }

    private async Task AddRoom()
    {
        if (roomDto.Name != string.Empty)
        {
            roomDto = await IRoomService.CreateRoom(roomDto);
            NavigationManager.NavigateTo("/rooms");
        }
    }
    private void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }
}
